<?php

namespace DummyNamespace;

use DummyRootNamespaceHttp\Requests;

use DummyRootNamespace{{modelNamespace}}{{modelName}};
use Illuminate\Http\Request;
use Session;

class DummyClass extends Controller
{
    protected ${{crudName}};

    public function __contruct({{modelName}} ${{crudName}}) {
        $this->${{crudName}} = ${{crudName}};
    }
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\View\View
     */
    public function index()
    {
        ${{crudName}} = $this->${{crudName}}->paginate({{pagination}});

        return view('{{viewPath}}{{viewName}}.index', compact('{{crudName}}'));
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\View\View
     */
    public function create()
    {
        return view('{{viewPath}}{{viewName}}.create');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param \Illuminate\Http\Request $request
     *
     * @return \Illuminate\Http\RedirectResponse|\Illuminate\Routing\Redirector
     */
    public function store(Request $request)
    {
        {{validationRules}}
        $requestData = $request->all();
        {{fileSnippet}}
        $this->${{crudName}}->create($requestData);

        Session::flash('flash_message', '{{modelName}} added!');

        return redirect('{{routeGroup}}{{viewName}}');
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     *
     * @return \Illuminate\View\View
     */
    public function show($id)
    {
        ${{crudNameSingular}} = $this->${{crudName}}->findOrFail($id);

        return view('{{viewPath}}{{viewName}}.show', compact('{{crudNameSingular}}'));
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     *
     * @return \Illuminate\View\View
     */
    public function edit($id)
    {
        ${{crudNameSingular}} = $this->${{crudName}}->findOrFail($id);

        return view('{{viewPath}}{{viewName}}.edit', compact('{{crudNameSingular}}'));
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  int  $id
     * @param \Illuminate\Http\Request $request
     *
     * @return \Illuminate\Http\RedirectResponse|\Illuminate\Routing\Redirector
     */
    public function update($id, Request $request)
    {
        {{validationRules}}
        $requestData = $request->all();
        {{fileSnippet}}
        ${{crudNameSingular}} = $this->${{crudName}}->findOrFail($id);
        ${{crudNameSingular}}->update($requestData);

        Session::flash('flash_message', '{{modelName}} updated!');

        return redirect('{{routeGroup}}{{viewName}}');
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     *
     * @return \Illuminate\Http\RedirectResponse|\Illuminate\Routing\Redirector
     */
    public function destroy($id)
    {
        $this->${{crudName}}->destroy($id);

        Session::flash('flash_message', '{{modelName}} deleted!');

        return redirect('{{routeGroup}}{{viewName}}');
    }
}